# Build configuration
# =========================================================

build:debug -c dbg
build:release -c opt

# Compiler configuration
# =========================================================

build:gnulike --cxxopt='-std=c++2a'
build:gnulike --cxxopt='-Wall'
build:gnulike --cxxopt='-Wextra'
build:gnulike --cxxopt='-pedantic-errors'
build:gnulike --cxxopt='-Werror'
build:gnulike --cxxopt='-Wdouble-promotion'
build:gnulike --cxxopt='-Wformat=2'
build:gnulike --cxxopt='-Wmissing-declarations'
build:gnulike --cxxopt='-Wnon-virtual-dtor'
build:gnulike --cxxopt='-Wnull-dereference'
build:gnulike --cxxopt='-Woverloaded-virtual'
build:gnulike --cxxopt='-Wshadow'
build:gnulike --cxxopt='-Wsign-compare'
build:gnulike --cxxopt='-Wundef'
build:gnulike --cxxopt='-fno-common'
build:gnulike --cxxopt='-Wno-missing-field-initializers' # Common idiom for zeroing members.
build:gnulike --per_file_copt='http:get@-Wno-sign-compare' # asio leaks this into our code.
build:gnulike --per_file_copt='http:get@-Wno-undef' # asio leaks this into our code.
build:gnulike --per_file_copt='http:get@-Wno-shadow' # asio leaks this into our code.
build:gnulike --per_file_copt='external/asio[:/]@-Wno-sign-compare'
build:gnulike --per_file_copt='external/asio[:/]@-Wno-undef'
build:gnulike --per_file_copt='external/boringssl[:/]@-Wno-unused-parameter'
build:gnulike --per_file_copt='external/ftxui[:/]@-Wno-shadow'
build:gnulike --per_file_copt='external/fmt[:/]@-Wno-shadow' # Fixed in master, but not in 7.1.3
build:gnulike --per_file_copt='external/glib[:/]@-fno-strict-aliasing'
build:gnulike --per_file_copt='external/imgui-sfml[:/]@-Wno-double-promotion'
build:gnulike --per_file_copt='external/imgui-sfml[:/]@-Wno-implicit-fallthrough'
build:gnulike --per_file_copt='external/imgui-sfml[:/]@-Wno-undef'
build:gnulike --per_file_copt='external/imgui-sfml[:/]@-Wno-unused-parameter'
build:gnulike --per_file_copt='external/imgui[:/]@-Wno-double-promotion'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-double-promotion'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-implicit-fallthrough'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-missing-declarations'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-shadow'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-sign-compare'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-undef'
build:gnulike --per_file_copt='external/sfml[:/]@-Wno-unused-parameter'

build:msvc --cxxopt='/std:c++latest'
build:msvc --cxxopt='/W4' # More warnings.
build:msvc --cxxopt='/WX' # Treat warnings as errors.
build:msvc --cxxopt='/permissive-' # Conform to the standard.
build:msvc --per_file_copt='external/boringssl[:/]@/wd4100' # C4100: 'out_public_key': unreferenced formal parameter
build:msvc --per_file_copt='external/boringssl[:/]@/wd4244' # C4244: '=': conversion from 'unsigned int' to 'uint8_t', possible loss of data
build:msvc --per_file_copt='external/boringssl[:/]@/wd4267' # C4267: '=': conversion from 'size_t' to 'int', possible loss of data
build:msvc --per_file_copt='external/ftxui[:/]@/wd4005' # C4005: 'NOMINMAX': macro redefinition
build:msvc --per_file_copt='external/ftxui[:/]@/wd4244' # C4244: '=': conversion from 'int' to 'uint8_t', possible loss of data
build:msvc --per_file_copt='external/ftxui[:/]@/wd4267' # C4267: '=': conversion from 'size_t' to 'int', possible loss of data
build:msvc --per_file_copt='external/glib[:/]@/wd4035' # C4035: 'function': no return value
build:msvc --per_file_copt='external/glib[:/]@/wd4715' # C4715: 'function' : not all control paths return a value
build:msvc --per_file_copt='external/glib[:/]@/wd4116' # C4116: unnamed type definition in parentheses
build:msvc --per_file_copt='external/glib[:/]@/wd4046' # C4046: ?
build:msvc --per_file_copt='external/glib[:/]@/wd4068' # C4068: unknown pragma
build:msvc --per_file_copt='external/glib[:/]@/wd4090' # C4090: 'operation' : different 'modifier' qualifiers
build:msvc --per_file_copt='external/glib[:/]@/FImsvc_recommended_pragmas.h' # 
build:msvc --per_file_copt='external/glib/glib[:/]@/SAFESEH:NO' # Disable SAFESEH with MSVC for plugins and libs that use external deps built with MinGW
build:msvc --per_file_copt='external/glib/gio[:/]@/SAFESEH:NO' # Disable SAFESEH with MSVC for plugins and libs that use external deps built with MinGW
build:msvc --per_file_copt='external/imgui-sfml[:/]@/wd4100' # C4100: 'bgColor': unreferenced formal parameter
build:msvc --per_file_copt='external/sfml[:/]@/wd4100' # C4100: 'visible': unreferenced formal parameter
build:msvc --per_file_copt='external/sfml[:/]@/wd4244' # C4244: 'initializing': conversion from 'sf::Uint32' to 'sf::Uint8', possible loss of data
build:msvc --per_file_copt='external/sfml[:/]@/wd4456' # C4456: declaration of 'i' hides previous local declaration
build:msvc --per_file_copt='external/sfml[:/]@/wd4701' # C4701: potentially uninitialized local variable 'shape' used
build:msvc --per_file_copt='external/sfml[:/]@/wd4703' # C4703: potentially uninitialized local pointer variable 'shape' used

# Special build options
# =========================================================

# Some of this is from "Can I run AddressSanitizer with more aggressive diagnostics enabled?"
# on https://github.com/google/sanitizers/wiki/AddressSanitizer#faq and some is from
# https://chromium.googlesource.com/external/github.com/grpc/grpc/+/4e9206f48c91e17f43856b016b12f59dd5118293/tools/bazel.rc
build:asan --strip=never
build:asan --copt=-fsanitize=address
build:asan --copt=-fsanitize-address-use-after-scope
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
build:asan --action_env=LSAN_OPTIONS=report_objects=1

# Misc configuration
# =========================================================

test --test_output=errors

try-import %workspace%/.bazelrc.local
